<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hantele.demo.dao.BooksMapper">
  <resultMap id="BaseResultMap" type="com.hantele.demo.entity.Books">
    <constructor>
      <idArg column="book_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="bookList_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="bookName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="author" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="press" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pubTime" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="state" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="ranges" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="resnum" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    book_ID, bookList_ID, bookName, author, press, pubTime, price, state, ranges, resnum
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from books
    where book_ID = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from books
    where book_ID = #{bookId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hantele.demo.entity.Books">
    insert into books (book_ID, bookList_ID, bookName, 
      author, press, pubTime, 
      price, state, ranges, resnum
      )
    values (#{bookId,jdbcType=INTEGER}, #{booklistId,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{press,jdbcType=VARCHAR}, #{pubtime,jdbcType=DATE}, 
      #{price,jdbcType=DOUBLE}, #{state,jdbcType=CHAR}, #{ranges,jdbcType=CHAR}, #{resnum,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hantele.demo.entity.Books">
    insert into books
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_ID,
      </if>
      <if test="booklistId != null">
        bookList_ID,
      </if>
      <if test="bookname != null">
        bookName,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="press != null">
        press,
      </if>
      <if test="pubtime != null">
        pubTime,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="ranges != null">
        ranges,
      </if>
      <if test="resnum != null">
        resnum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="booklistId != null">
        #{booklistId,jdbcType=INTEGER},
      </if>
      <if test="bookname != null">
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        #{press,jdbcType=VARCHAR},
      </if>
      <if test="pubtime != null">
        #{pubtime,jdbcType=DATE},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="ranges != null">
        #{ranges,jdbcType=CHAR},
      </if>
      <if test="resnum != null">
        #{resnum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hantele.demo.entity.Books">
    update books
    <set>
      <if test="booklistId != null">
        bookList_ID = #{booklistId,jdbcType=INTEGER},
      </if>
      <if test="bookname != null">
        bookName = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        press = #{press,jdbcType=VARCHAR},
      </if>
      <if test="pubtime != null">
        pubTime = #{pubtime,jdbcType=DATE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="ranges != null">
        ranges = #{ranges,jdbcType=CHAR},
      </if>
      <if test="resnum != null">
        resnum = #{resnum,jdbcType=VARCHAR},
      </if>
    </set>
    where book_ID = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hantele.demo.entity.Books">
    update books
    set bookList_ID = #{booklistId,jdbcType=INTEGER},
      bookName = #{bookname,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      press = #{press,jdbcType=VARCHAR},
      pubTime = #{pubtime,jdbcType=DATE},
      price = #{price,jdbcType=DOUBLE},
      state = #{state,jdbcType=CHAR},
      ranges = #{ranges,jdbcType=CHAR},
      resnum = #{resnum,jdbcType=VARCHAR}
    where book_ID = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>